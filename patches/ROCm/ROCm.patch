diff --git a/tools/rocm-build/ROCm.mk b/tools/rocm-build/ROCm.mk
index 1dde463..3ce57f1 100644
--- a/tools/rocm-build/ROCm.mk
+++ b/tools/rocm-build/ROCm.mk
@@ -114,7 +114,7 @@ $(call adddep,roctracer,${ASAN_DEP} rocr hip_on_rocclr)
 
 
 # rocm-dev points to all possible last finish components of Stage1 build.
-rocm-dev-components :=amd_smi_lib aqlprofile aqlprofiletest comgr dbgapi devicelibs hip_on_rocclr hipcc hipify_clang \
+rocm-dev-components :=amd_smi_lib aqlprofile comgr dbgapi devicelibs hip_on_rocclr hipcc hipify_clang \
 	lightning rocprofiler-compute opencl_on_rocclr openmp_extras rocm_bandwidth_test rocm_smi_lib \
 	rocm-cmake rocm-core rocm-gdb rocminfo rocprofiler-register rocprofiler-sdk rocprofiler-systems \
 	rocprofiler rocr rocr_debug_agent rocrsamples roctracer
@@ -266,9 +266,9 @@ endif
 # starting a new one and continueing the build. The attempt
 # is to have run-once code.
 ${OUT_DIR}/logs:
-	sudo mkdir -p -m 775 "${ROCM_INSTALL_PATH}" && \
-	sudo chown -R "$(shell id -u):$(shell id -g)" "/opt"
-	sudo chown "$(shell id -u):$(shell id -g)" "/home/$(shell id -un)"
+	mkdir -p -m 775 "${ROCM_INSTALL_PATH}"
+#	sudo chown -R "$(shell id -u):$(shell id -g)" "/opt"
+#	sudo chown "$(shell id -u):$(shell id -g)" "/home/$(shell id -un)"
 	mkdir -p "${@}"
 	mkdir -p ${HOME}/.ccache
 
diff --git a/tools/rocm-build/build_aqlprofile.sh b/tools/rocm-build/build_aqlprofile.sh
index d2eac59..15fce8c 100755
--- a/tools/rocm-build/build_aqlprofile.sh
+++ b/tools/rocm-build/build_aqlprofile.sh
@@ -119,8 +119,22 @@ build() {
         wget -t3 -P "$PACKAGE_DEB" "${url}${package}"
         copy_pkg_files_to_rocm ${API_NAME} ${API_NAME}
     else
-        echo "$DISTRO_ID is not supported..."
-        exit 2
+        mkdir -p "$PACKAGE_DEB"
+        local rocm_ver=${ROCM_VERSION}
+        if [ ${ROCM_VERSION##*.} = 0 ]; then
+            rocm_ver=${ROCM_VERSION%.*}
+        fi
+        cd "${PACKAGE_DEB}"|| exit 2
+        local package="hsa-amd-aqlprofile_1.0.0.60400-47~24.04_amd64.deb"
+        wget "https://repo.radeon.com/rocm/apt/${rocm_ver}/pool/main/h/${API_NAME}/${package}"
+        if [ -z "$package" ]; then
+            echo "No package found for Ubuntu version $DISTRO_RELEASE"
+            exit 1
+        fi
+        ar -x "$package"
+        tar -xzf data.tar.gz
+        cp -r ./opt/rocm*/* "${ROCM_PATH}"
+        rm -r ./*
     fi
 
     echo "Installing $PROJ_NAME" package
diff --git a/tools/rocm-build/build_composable_kernel.sh b/tools/rocm-build/build_composable_kernel.sh
index 7fbebfb..2983e90 100755
--- a/tools/rocm-build/build_composable_kernel.sh
+++ b/tools/rocm-build/build_composable_kernel.sh
@@ -10,14 +10,14 @@ ENABLE_ADDRESS_SANITIZER=false
 set_component_src composable_kernel
 disable_debug_package_generation
 # Set the GPU_ARCH_LIST to the supported GPUs needed after https://github.com/ROCm/composable_kernel/pull/1536/
-GPU_ARCH_LIST="gfx908;gfx90a;gfx942;gfx1030;gfx1100;gfx1101;gfx1102;gfx1200;gfx1201"
+GPU_ARCH_LIST="gfx908"
 
 build_miopen_ck() {
     echo "Start Building Composable Kernel"
     if [ "${ENABLE_ADDRESS_SANITIZER}" == "true" ]; then
        set_asan_env_vars
        set_address_sanitizer_on
-       GPU_ARCH_LIST="gfx908:xnack+;gfx90a:xnack+;gfx942:xnack+"
+       GPU_ARCH_LIST="gfx908:xnack+"
     else
        unset_asan_env_vars
        set_address_sanitizer_off
@@ -56,7 +56,7 @@ build_miopen_ck() {
         -DCMAKE_CXX_COMPILER=$(set_build_variables __CLANG++__) \
         -DCMAKE_C_COMPILER=$(set_build_variables __CLANG__) \
         ${LAUNCHER_FLAGS} \
-        -DGPU_ARCHS="${GPU_ARCH_LIST}" \
+        -DGPU_TARGETS="${GPU_ARCH_LIST}" \
         "$COMPONENT_SRC"
 
     cmake --build . -- -j${PROC} package
diff --git a/tools/rocm-build/build_lightning.sh b/tools/rocm-build/build_lightning.sh
index 5126689..25a15e0 100755
--- a/tools/rocm-build/build_lightning.sh
+++ b/tools/rocm-build/build_lightning.sh
@@ -73,7 +73,7 @@ MAKETARGET="deb"
 ASSERT_LLVM_VERSION_MAJOR=""
 ASSERT_LLVM_VERSION_MINOR=""
 
-SKIP_LIT_TESTS=0
+SKIP_LIT_TESTS=1
 BUILD_MANPAGES="ON"
 LLVM_INSTALL_UTILS="ON"
 STATIC_FLAG=
diff --git a/tools/rocm-build/build_miopen-deps.sh b/tools/rocm-build/build_miopen-deps.sh
index fb3ef0d..66e4a5a 100755
--- a/tools/rocm-build/build_miopen-deps.sh
+++ b/tools/rocm-build/build_miopen-deps.sh
@@ -49,7 +49,7 @@ build_miopen_deps() {
     MLIR_COMMIT="$(awk '/rocMLIR/ {split($1, s, "@"); print s[2]}' requirements.txt)"
 
 
-    pip3 install https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz
+    pip3 -- install https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz
     PATH="${PATH}:${ROCM_PATH}:${HOME}/.local/bin" rbuild prepare -d "$HOME/miopen-deps" --cxx="$(set_build_variables __CLANG++__)" --cc "$(set_build_variables __CLANG__)"
     build_miopen_mlir "$MLIR_COMMIT"
 
diff --git a/tools/rocm-build/build_rocblas.sh b/tools/rocm-build/build_rocblas.sh
index cb23269..c7b53b1 100755
--- a/tools/rocm-build/build_rocblas.sh
+++ b/tools/rocm-build/build_rocblas.sh
@@ -5,7 +5,7 @@ set -ex
 source "$(dirname "${BASH_SOURCE[0]}")/compute_utils.sh"
 
 set_component_src rocBLAS
-DEPS_DIR=${HOME}/rocblas
+DEPS_DIR=/opt/AMD/aocl/aocl-linux-aocc-5.0.0/aocc
 
 stage2_command_args "$@"
 disable_debug_package_generation
@@ -32,7 +32,7 @@ build_rocblas() {
     cd $COMPONENT_SRC
 
     CXX=$(set_build_variables __AMD_CLANG_++__)
-    mkdir -p $DEPS_DIR && cp -r /usr/blis $DEPS_DIR
+    #mkdir -p $DEPS_DIR && cp -r /usr/blis $DEPS_DIR
     mkdir -p "$BUILD_DIR" && cd "$BUILD_DIR"
 
     # if ENABLE_GPU_ARCH is set in env by Job parameter ENABLE_GPU_ARCH, then set GFX_ARCH to that value. This will override any of the case values above
diff --git a/tools/rocm-build/build_rocprofiler-systems.sh b/tools/rocm-build/build_rocprofiler-systems.sh
index 1f7fb98..303870c 100755
--- a/tools/rocm-build/build_rocprofiler-systems.sh
+++ b/tools/rocm-build/build_rocprofiler-systems.sh
@@ -31,7 +31,7 @@ API_NAME="rocprofiler-systems"
 PROJ_NAME="$API_NAME"
 LIB_NAME="lib${API_NAME}"
 TARGET="build"
-MAKETARGET="deb"
+MAKETARGET="rpm"
 PACKAGE_ROOT="$(getPackageRoot)"
 PACKAGE_LIB="$(getLibPath)"
 # PACKAGE_INCLUDE="$(getIncludePath)"
@@ -43,8 +43,8 @@ BUILD_TYPE="Debug"
 MAKE_OPTS="-j 8"
 SHARED_LIBS="ON"
 CLEAN_OR_OUT=0
-MAKETARGET="deb"
-PKGTYPE="deb"
+MAKETARGET="rpm"
+PKGTYPE="rpm"
 ASAN=0
 
 #parse the arguments
@@ -150,7 +150,7 @@ build_rocprofiler_systems() {
     # copy the new URL to your local config
     git submodule sync --recursive
     # force update the submodule from the new URL
-    git submodule update --init --recursive --force
+    git submodule update --init --recursive # --force
 
     echo "Updated submodule status"
     git submodule status
diff --git a/tools/rocm-build/compute_utils.sh b/tools/rocm-build/compute_utils.sh
index 930099f..a393576 100755
--- a/tools/rocm-build/compute_utils.sh
+++ b/tools/rocm-build/compute_utils.sh
@@ -7,7 +7,7 @@ TOPOLOGY_SYSFS_DIR=/sys/devices/virtual/kfd/kfd/topology/nodes
 
 # Set python version
 # TODO: Get the python version from build arguments
-PY_COMMAND=python3.6
+PY_COMMAND=python3.12
 # Set a sensible default value for DASH_JAY in case none is provided
 DASH_JAY=${DASH_JAY:-"-j $(nproc)"}
 
@@ -354,7 +354,7 @@ copy_if() {
     shift 3
     mkdir -p "$dir"
     if [[ "${selector,,}" =~ "${type,,}" ]] ; then
-	cp -a "$@" "$dir"
+	cp "$@" "$dir"
     fi
     # handle ddeb files as well, renaming them on the way
     for f
diff --git a/tools/rocm-build/envsetup.sh b/tools/rocm-build/envsetup.sh
index fff230b..4330332 100755
--- a/tools/rocm-build/envsetup.sh
+++ b/tools/rocm-build/envsetup.sh
@@ -65,6 +65,7 @@ case "${DISTRO_NAME}" in
     ("centos") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
     ("sles") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
     ("rhel") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
+    ("opensuse-tumbleweed") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ;;
     ("mariner") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
     ("azurelinux") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
     ("almalinux") export CPACKGEN=RPM PACKAGEEXT=rpm PKGTYPE=rpm ROCM_PKGTYPE=RPM ;;
@@ -261,7 +262,7 @@ export LANG=C.UTF-8
 
 export PROC=${PROC:-"$(nproc)"}
 # export RELEASE_FLAG=${RELEASE_FLAG:-"-r"}
-export SUDO=sudo
+export SUDO=
 export PATH=/usr/local/bin:${PATH}:/sbin:/bin
 export CCACHE_DIR=${HOME}/.ccache
 
